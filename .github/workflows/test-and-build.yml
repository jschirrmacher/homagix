---
name: CI / CD for joschi64/homagix
on:
  push:
    tags:
      - 'v*'
  pull_request:

jobs:
  build:
    name: Test, build and push to Dockerhub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # renovate: tag=v2

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@8b842e721d38d18bea23b57f4c040e53331f4ca2 # renovate: tag=v3
        with:
          images: joschi64/homagix

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@4d0182af5ead0b7bf53e87e49aa959476f5501d3 # renovate: tag=v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Build frontend files
        run: npm run build --if-present

      - name: Test
        run: npm test
        env:
          CI: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@abe5d8f79a1606a2d3e218847032f3f2b1726ab0 # renovate: tag=v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # renovate: tag=v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@1bc1040caef9e604eb543693ba89b5bf4fc80935 # renovate: tag=v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
